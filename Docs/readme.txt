PReport
for Delphi 4-7 and C++Builder 5-6

1. INTRODUCTION

  PReport - library intended for generation of the reports. It is written on 
Object Pascal, can be used with Borland Delphi 4-7 and Borland C ++ Builder 5-6.
The majority of possibilities represented by similar report generators: 
FastReport, ReportBuilder, QuickReport is supported, however there are 
distinctive, unique features.
So, for example PReport can be used not only for generation standard graphic 
Windows reports, but also for generation of the text reports for 
printing on matrix printers. At the present moment library includes the 
following components:

TprReport
  Provides functionality for creation the graphic Windows reports, like FastReport, 
  QuickReport, ReportBuilder and so on.
TprTxReport
  Provides functionality for creation the text reports for printing on
  matrix printers.
TprMLRes
  TprMLRes is a non visual component, which can replace contents of the
  components properties with values stored in resources, 
  used for supporting various languages.
TprStringsDataset
  Non visual component derived from TprDataset, allows using list of strings 
  (TStrings object) as a dataset in the PReport.
TprEventsDataset
  Non visual component derived from TprDataset,
  allows writing dataset logic as Delphi events.
TprArrayDataset
  Non visual component derived from TprDataset, allows using arrays as
  a dataset in the PReport.
TprDesignerPanel
  Represents control for editing TprReport template.
  On the basis of this component the report designer for TprReport is created.
TprTxDesignerPanel
  Represents control for editing TprTxReport template. 
  On the basis of this component the report designer for TprTxReport 
  is created.
TprPreviewPanel
  Represents control for preview the report generated by TprReport component.
  On the basis of this component the preview window for TprReport is created.
TprTxPreviewPanel
  Represents control for preview the report generated by TprTxReport component.
  On the basis of this component the preview window for TprTxReport is created.

TprReport and TprTxReport classes are derived from TprCustomReport,
which contains all logic of the report generating.
The derived classes provide functionality for:
report designing, preview and printing.

Main features of the report engine (supported for Windows and text reports):
  - Cross-tab reports. 
    Any band can be printed vertically. 
    For example, on each page the vertical PageHeader can be printed, 
    the vertical grouping is supported; the width of vertical bands can will be
    dynamically changed etc.

  - Objects can have many views. 
    Each view has condition, which determines when view is used.

  - Objects can dynamically resize.
    For example the size of band will be automatically increased or decreased
    depending on sizes of objects, contained in it, objects can change the
    sizes and position concerning each other.

  - Links between bands can be defined.
    It can be used to avoid such situations at which the group footer 
    is printed on new page without the data (detail band).

  - All aggregated values (group summary, report summary and so on) can be used
    in any place, where their significance can be shown. 
    For example, the group summary can be shown not only in group footer,
    but also in a group title, in detail band, to which the given group is
    linked. But this total, certainly, can not be shown in a title of the 
    report, the total under the report can be shown anywhere.

  - Unlimited amount of the enclosed groups. 

  - Master-detail reports.

  - The columns can go not only from top - down and at the left - to the right, 
    but also at the left - to the right and top-down. 

  - Virtual datasets (TprDataset) are supported.
    The detail band can be linked not only to a TDataset component, but also
    to TprDataset. The components - intermediaries, for example as 
    TppBDEDatasourse in ReportBuilder, aren't necessary.

  - Tracking user actions at preview window. 
    Moving mouse over object double clicks and so on.

TpReport

  - Advanced preview window. 
    Search of the text, mouse scrolling, mouse wheel supporti and so on. 

  - Export to the XLS and HTML formats (without use OLE or DDE).

  - End-user can edit generated report.

TprTxReport

  - Full-functionality designer, same as at TprReport. 

  - Various text styles supported. Italic, bold and so on.

  - Developer can define custom ESC commands.

  - Pseudographics supported.


2. HISTORY

   Version 1.9.9.1
   -------------
   New features:
     - Support of Delphi2005 is added.
     - Demo "32_PrintStringListAsRTF" is added, demonstrates printing 
       the RTF from TStringList.

   Removed bugs:
     - Serious errors with processing of the print variables in 
       TprReport and TprTxReport are fixed.
     - "Range check error" exception occurs when project is compiled 
       with option "Range check". Fixed.
     - AV occurs in this scenario:
         1. Open report template in TprDesignerPanel or TprTxDesignerPanel
         2. Select some objects in panel.
         3. Open new designer of report connected to designer panel in another window.
         4. Delete objects in this new designer which are selected in designer panel.
         5. Close designer
         6. AV occurs. Fixed.
     - The "Print setup dialog" of TprReport works incorrectly in this situation:
         1. Set TprReport.Copies to some value (3,4,10 etc).
         2. Call TprReport.SetupPrintOptions method
         3. The dialog displays 1 copy to print.
         This bug depends on type of printer. Fixed.

   Version 1.9.9
   -------------
   New features:
     - Added property TprValue.Value, it can be used
       to get the value of aggregate variable during the generating of the
       report. See 31_AccessToAggVariables demo for details.

   Removed bugs:
     - Serious error occurs during the generating of the 
       report which has a bands with RepeatOnEachPage = true. Fixed.

   Version 1.9.8
   -------------
   New features:
     - New TprBarCodeObj object is added. See "30_BarCodes" demo for details. 
     - Improved RTF support - now images in the RTF text are supported.
     - Borders can be defined for TprTxMemoObj. Border is defined 
       by the eight chars, see properties of TprTxMemoObjRecVersion: BrdLeft, 
       BrdLeftTop, BrdTop, BrdRightTop, BrdRight, BrdRightBottom, BrdBottom, 
       BrdLeftBottom. 
       In TxRO.ini file can be defined the "border schemas", each scheme defines 
       the set of border's chars. These schemas can be selected in the designer 
       of the TprTxMemoObj. See help on TprTxBorderScheme.
     - Added native support of JPEG images.

   Removed bugs:
     - Property DataSet.LineNo does not work in parser. Fixed. 
       (Bug was added in the 1.9.7 version)
     - Minor bugs fixed in the algorithm of objects and bands splitting.

   Version 1.9.7
   -------------
   New features:
     - Support of nested reports is added: 
       * Property SubReportName is added for horizontal bands: 
         Summary, Detail, DetailHeader, DetailFooter, GroupHeader, GroupFooter.
         Use this property to specify name of another TprCustomReport object,
         which holds subreport template.
       * Event TprCustomReport.OnBeginSubReportGenerate is added, use this event
         to initialize data for subreport.
       See "26_SubReports" demo for details.

     - Improved RTF support: 
       * Last version of Microsoft RichEdit dll is supported (msftedit.dll) 
         this dll is distributed with WinXP SP1.
       * The TprRichObj object now can be split between pages.
 
     - Added justify align for TprMemoObj and TprTxMemoObj objects.

     - Property MinDataRecords is added for bands: GroupHeader, GroupFooter. 
       This property gets or sets the value indicating that the group header 
       must be printed only when the group data contains at least of the 
       specified amount of records. By default this value equals to 0 ie 
       the group header will be printed always.

     - New event for TprCustomReport is added: 
       * OnPrintStart - occurs immediately before printing.

     - New event for TprTxReport is added: 
       * OnPrintLine - occurs before printing a line of the report.
    
     - TprCustomPreviewPanel (parent class for TprPreviewPanel and 
       TprTxPreviewPanel), added properties and methods: 
       * PageIndex - Gets or sets the zero-based index of the displayed page.
       * PageCount - Returns the count of pages in the connected report.
       * GotoPage - Displays the page with specified index.
       * GotoPriorPage - Displays the previous page.
       * GotoNextPage - Displays the next page.
       * GotoFirstPage - Displays the first page.
       * GotoLastPage - Displays the last page.

     - TprCustomPreview (parent class for TprPreview and TprTxPreview), 
       instance of this class is returned by the TprCustomReport.PreviewForm 
       property; added properties and methods: 
         PageIndex, PageCount, 
         GotoPage, GotoPriorPage, GotoNextPage, GotoFirstPage, GotoLastPage

   Changes:
     - Now you can use aggregate variables in the TprBand.VisibleFormula 
       property, using that you can hide the group header if group summary 
       less than some value, for example.
     
     - TprPreviewPanel.CurPage is renamed to ActivePage.

     - TprPreviewPanel.CurShowPageIndex property is removed, use PageIndex 
       property instead. 

     -  TprTxPreviewPanel.CurPage property is removed, use PageIndex instead.

     - TprTxPreviewPanel.PagesCount property is removed, use PageCount instead.

   Removed bugs:
     - Operator [!] (not) does not work. Fixed.

     - If the multicolumn report contains the group header with 
       StartNewPage = true and ReprintOnEachPage = true then the report is 
       forming incorrectly. Fixed.

     - If the TprReport is exported to Excel or HTML from not first page 
       then the application freezes (the eternal cycle occurs). Fixed.

     - If the TprImageObj has the zero width or height then AV occurs. Fixed.

     - In OnUnknownFunction, OnUnknownObjFunction methods only first parameter
       is accessible under C++Builder. Fixed.

   Version 1.9.6
   -------------
   New features:
       Common:
         - New demo "23_CustomSaveOpenInDesigner" is added, demonstrates
           how to save and load the report templates from database. 

   Removed bugs:
       TprReport:
         - Serious bug is removed, that causes an incorrect painting of 
           the transparent TprMemoObj in designer and preview mode.

   Version 1.9.5
   -------------
   New features:
       Common:
         - CanSplit property is added for all bands except for ReportTitle,
           PageFooter and PageHeader. See new demo "20_Split" for details.

         - Algorithm of resizing for TprMemoObj and TprTxMemoObj is changed.

         - New demo "20_Split" is added.

         - Added new feature - the printing variables.
           These variables are calculated in the time of report printing
           and can be used for output of the various printing information:
              - the number of current printing copy
              - the name of printer
              - and so on.

         - New demo "21_ImagesFromFile" is added, demonstrates
           how to print images from files, the files' names are contained in the
           database.

         - New demo "22_PrintingVariables" is added, demonstrates
           the using of the printing variables.

       TprReport:
         - CanSplit property is added for TprMemoObj. 
           See new demo "20_Split" for details.

       TprTxReport:
         - CanSplit property is added for TprTxMemoObj, TprTxHLineObj and
           TprTxVLineObj. See new demo "20_Split" for details.

   Removed bugs:
       Common:
         - Instead of PreviewFormMode property DesignerFormProperty is used
           in TprCustomReport.PreviewPreparedReport method. Bug is removed.

       TprTxReport:
         - The bug is removed in TprTxPreviewPanel which has caused AV 
           in some cases.
   
   Version 1.9.3
   -------------
     New features:
       Common:
         - Added new component TprArrayDataset, which can be used for arrays
           printing (see 19_CardReport as example).

         - Added new demo 18_RotatedReport, which demonstrates how to create
           a report which prints a datasets records by horizontally
           (with using Vertical detail band).

         - Added new demo 19_CardReport, which demonstrates how to print 
           a report of such structure:

  No:            Record1             Record2             Record3
  Caption:       [Table.Caption]     [Table.Caption]     [Table.Caption]
  Description:   [Table.Description] [Table.Description] [Table.Description]

  No:            Record4             Record5             Record6
  Caption:       [Table.Caption]     [Table.Caption]     [Table.Caption]
  Description:   [Table.Description] [Table.Description] [Table.Description]

  ...


  No:            RecordN-1           RecordN
  Caption:       [Table.Caption]     [Table.Caption]
  Description:   [Table.Description] [Table.Description]

     
     Removed bugs:
         - This code raise exception:
             prPreviewPanel.Report = prReport;
             prReport.PrepareReport; // exception raised
           Corrected.

         - If in design-time set TprPreviewPanel.Report property to nil then
           exception occurs.
           Corrected.

         - From now this code:
            TprImageObjRecVersion(i.dRec.Versions[0]).Picture = image1.Picture;
           assigns the contents of image1.Picture to 
           TprImageObjRecVersion.Picture, instead of assign reference to the
           image1.Picture object.

         - If contents of TprMemoObj rotated by 90 degrees then it vertical
           alignment is showed incorrectly in preview.
           Corrected.

   Version 1.9.2
   -------------

     New features:
       Common:
         - Added new link modes of objects:
            Width of object depends on total change of width of linked objects
            Height of object depends on total change of height of linked objects
           They are demonstated in demo (on last page):
           DEMO\Demos\14_NewObjectsLinksModes

         - Added new property ResetPagesCount at TprGenBandInfo object,
           you can use it in OnBandGenerateCell event,
           to manipulate by pages numbering. See demo:
           DEMO\Demos\16_ChangePagesNumbering

         - Added new property GroupValue at TprGroup object, which returns 
           current value of group.
           You can use this property in report template, for example in 
           TprMemoObj:
           [prGroup1.GroupValue()] See demo:
           DEMO\Demos\15_GroupedTprDataset

         - Added new method
           function TprVariables.AddVariable(const AVariableName: string; 
                                             const AVariableValue: Variant): TprVariable;
           If variable is not exists, adds it with specified name and value,
           if variable exists function change it value.

         - Added new property PrintOnLastPage at vertical and horizontal 
           page footers.

     Removed bugs:
         - The borders with width more than one are incorrectly shown in
           preview and at printing.

         - If DecimalSeparator is not [.] (point) errors in parser are occured
           at use of floating-point numbers.

         - TvgrControlBarManager are incorrectly restore properties of hidden
           toolbars.


   Version 1.9
   -----------

     New features:
       Common
         - All controls (ColorButton, FontComoboBox, ControlBar, ControlBarManager)
           moved to separate library vgrCommonControls.
           This library now contains:
             TvgrColorButton
             TvgrFontComboBox
             TvgrControlBar
             TvgrControlBarManager
           vgrCommonControls library are freeware and distributed 
           with sources, contains two packages:
             vgr_CommonControls - runtime package
             vgr_dsgnCommonControls - designtime package

         - Added method:
           TprCustomReport.FindObject(const AObjectName: string): TprObj;
           Can be used for find object (derived from TprObj) in
           the report template by its name.
           If object not found NIL returned.

         - Added properties:
             TprCustomReport.ObjectCount: Integer
               Returns total count of objects in the report template.
             TprCustomReport.Objects[Index: Integer]: TprObj
               Can be used for access to object of report template by its index.
               Total count of objects returned by ObjectCount property.
         - Added properties to all objects derived from TprObj:
             VersionCount: Integer
               Retuns count of versions of object. First index started from
               zero. This property can not be used while report preparing,
               in OnFirstPassObject event for example.
             Versions[Index: Integer]: TprObjRecVersion
               Can be used for access to version of object by its index.
               This property can not be used while report preparing,
               in OnFirstPassObject event for example.
             DefVersion: TprObjRecVersion
               Can be used for access to default version of object.
               This property can not be used while report preparing,
               in OnFirstPassObject event for example.
             GenVersionCount: Integer
               Retuns count of versions of object. First index started from
               zero. Can be used only while report are generated,
               for example in OnFirstPassObject event.
             GenVersions[Index: Integer]: TprObjRecVersion
               Can be used for access to version of object by its index.
               Can be used only while report are generated, for example in 
               OnFirstPassObject event.
             GenCurVersion: TprObjRecVersion
               Can be used for access to current version of object,
               which are selected while report are generated.
               Can be used only while report are generated, for example in 
               OnFirstPassObject event.
  
           The demo DEMO\Demos\13_ChangingAtRuntime\ demonstrates using of 
           above properties.

         - Added new link modes between objects, see demo:
           DEMO\Demos\14_NewObjectsLinksModes\ for details.

       TprReport
         - New object TprShapeObj

         - speed of the report generation are increased

       TprTxReport
         - New object TprHLineObj

         - New object TprVLineObj


   Version 1.7
   -----------

     New features:
       Common:
         - The export techonoly is advanced, the concept of the filter of export 
           (base class TprCustomExportFilter) is entered.

         - The vtkExport library is included in PReport 1.7.

         - The parser is optimized.

         - Now if in parser is met divide by zero there is no AV, 
           and the result equal NULL.

       TprReport
         - On the basis of the vtkExport library is realized fast export 
           to the XLS and HTML formats.

       TprTxReport
         - System of the description ESC of commands for various models
           of printers completely is altered. The ESCModel.ini file is replaced by 
           the TxRO.ini file. With use of a new format you can 
           specify not only real ESC commands for already existing kinds
           of the font, 
           but also to define ESC commands, to enter new styles and kinds
           of fonts.

         - Entered new object TprTxCommandObj, is intended to print given
           ESC commands

         - Entered new property at TprTxReport - EjectPageAfterPrint,
           if it is True after printing the scrolling of page will be
           carried out.

         - Advanced export to a TXT format.

     Removed bugs:
         - The errors for want of to operation of the designer and preview
           in a mode MDI are removed.
         - The bugs in the dialog box of the setup print parameters
           are corrected


3. INSTALLATION

   Before installing, remove any other version of PReport from the Delphi
component palette. Create a folder and decompress the files in PReportXXX.zip
to this directory. Use WinZip or WinRar - archive contains long file names.
PReport use the CommonControls library, it must be installed before
PReport.
 
2.1. Delphi 4
   - Choose "File/Open..." and open package vgr_CommonControlsD5.dpk from
     ..\CommonControls\Source. In package editor, chose "Compile" button
     to compile package.
   - Choose "File/Open..." and open package vgr_dsgnCommonControlsD5.dpk from
     ..\CommonControls\Source. In package editor, chose "Install" button
     to install package into Delphi.
   - Choose "Tools/Enviroment Options..." menu command. Go "Library" tab
     and add path to ..\CommonControls\Source directory to the "Library path"
     string.
   - Choose "File/Open..." and open package prPackage4.dpk from
     ..\PReport\Source. In package editor, chose "Compile" button
     to compile package.
   - Choose "Tools/Enviroment Options..." menu command. Go "Library" tab
     and add path to ..\PReport\Source directory to the "Library path"
     string.

2.2. Delphi 5
   - Choose "File/Open..." and open package vgr_CommonControlsD5.dpk from
     ..\CommonControls\Source. In package editor, chose "Compile" button
     to compile package.
   - Choose "File/Open..." and open package vgr_dsgnCommonControlsD5.dpk from
     ..\CommonControls\Source. In package editor, chose "Install" button
     to install package into Delphi.
   - Choose "Tools/Enviroment Options..." menu command. Go "Library" tab
     and add path to ..\CommonControls\Source directory to the "Library path"
     string.
   - Choose "File/Open..." and open package prPackage5.dpk from
     ..\PReport\Source. In package editor, chose "Compile" button
     to compile package.
   - Choose "Tools/Enviroment Options..." menu command. Go "Library" tab
     and add path to ..\PReport\Source directory to the "Library path"
     string.

2.3. Delphi 6
   - Choose "File/Open..." and open package vgr_CommonControlsD6.dpk from
     ..\CommonControls\Source. In package editor, chose "Compile" button
     to compile package.
   - Choose "File/Open..." and open package vgr_dsgnCommonControlsD6.dpk from
     ..\CommonControls\Source. In package editor, chose "Install" button
     to install package into Delphi.
   - Choose "Tools/Enviroment Options..." menu command. Go "Library" tab
     and add path to ..\CommonControls\Source directory to the "Library path"
     string.
   - Choose "File/Open..." and open package prPackage6.dpk from
     ..\PReport\Source. In package editor, chose "Compile" button
     to compile package.
   - Choose "Tools/Enviroment Options..." menu command. Go "Library" tab
     and add path to ..\PReport\Source directory to the "Library path"
     string.

2.4. Delphi 7
   - Choose "File/Open..." and open package vgr_CommonControlsD7.dpk from
     ..\CommonControls\Source. In package editor, chose "Compile" button
     to compile package.
   - Choose "File/Open..." and open package vgr_dsgnCommonControlsD7.dpk from
     ..\CommonControls\Source. In package editor, chose "Install" button
     to install package into Delphi.
   - Choose "Tools/Enviroment Options..." menu command. Go "Library" tab
     and add path to ..\CommonControls\Source directory to the "Library path"
     string.
   - Choose "File/Open..." and open package prPackage7.dpk from
     ..\PReport\Source. In package editor, chose "Compile" button
     to compile package.
   - Choose "Tools/Enviroment Options..." menu command. Go "Library" tab
     and add path to ..\PReport\Source directory to the "Library path"
     string.

2.5. Delphi 9
   - Choose "File/Open..." and open package vgr_CommonControlsD9.dpk from
     ..\CommonControls\Source. In package editor, chose "Compile" button
     to compile package.
   - Choose "File/Open..." and open package vgr_dsgnCommonControlsD9.dpk from
     ..\CommonControls\Source. In package editor, chose "Install" item
     in popup menu to install package into Delphi.
   - Choose "Tools/Options..." menu command. Go to
     "Enviroment Options\Delphi Options\Library - Win32" item
     and add path to ..\CommonControls\Source directory to the "Library path"
     string.
   - Choose "File/Open..." and open package prPackage9.dpk from
     ..\PReport\Source. In package editor, chose "Compile" button
     to compile package.
   - Choose "Tools/Enviroment Options..." menu command. Go to
     "Enviroment Options\Delphi Options\Library - Win32" tab
     and add path to ..\PReport\Source directory to the "Library path"
     string.

2.6. C++Builder 5
   - Choose "File/Open..." and open package vgr_CommonControlsBCB5.dpk from
     ..\CommonControls\Source. In package editor, chose "Compile" button
     to compile package.
   - Choose "File/Open..." and open package vgr_dsgnCommonControlsBCB5.dpk from
     ..\CommonControls\Source. In package editor, chose "Install" button
     to install package into Delphi.
   - Choose "Tools/Enviroment Options..." menu command. Go "Library" tab
     and add path to ..\CommonControls\Source directory to the "Library path"
     string.
   - Choose "File/Open..." and open package prPackageCB5.dpk from
     ..\PReport\Source. In package editor, chose "Compile" button
     to compile package.
   - Choose "Tools/Enviroment Options..." menu command. Go "Library" tab
     and add path to ..\PReport\Source and ..\PReport\Res
     directories to the "Library path" string.

2.7. C++Builder 6
   - Choose "File/Open..." and open package vgr_CommonControlsBCB6.dpk from
     ..\CommonControls\Source. In package editor, chose "Compile" button
     to compile package.
   - Choose "File/Open..." and open package vgr_dsgnCommonControlsBCB6.dpk from
     ..\CommonControls\Source. In package editor, chose "Install" button
     to install package into Delphi.
   - Choose "Tools/Enviroment Options..." menu command. Go "Library" tab
     and add path to ..\CommonControls\Source directory to the "Library path"
     string.
   - Choose "File/Open..." and open package prPackageCB6.dpk from
     ..\PReport\Source. In package editor, chose "Compile" button
     to compile package.
   - Choose "Tools/Enviroment Options..." menu command. Go "Library" tab
     and add path to ..\PReport\Source and ..\PReport\Res
     directories to the "Library path" string.
